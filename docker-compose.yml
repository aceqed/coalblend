version: "3.8"

services:
  # PostgreSQL Database
  postgres:
    image: postgres:15-alpine
    container_name: coal_blend_db
    environment:
      POSTGRES_DB: postgres
      POSTGRES_USER: postgres
      POSTGRES_PASSWORD: new_password
    volumes:
      - postgres_data:/var/lib/postgresql/data
      - ./init.sql:/docker-entrypoint-initdb.d/init.sql
    ports:
      - "5432:5432"
    healthcheck:
      test: ["CMD-SHELL", "pg_isready -U postgres -d postgres"]
      interval: 10s
      timeout: 5s
      retries: 5
    networks:
      - coal_blend_network

  # Backend API
  backend:
    build:
      context: ./backend
      dockerfile: Dockerfile
    container_name: coal_blend_backend
    environment:
      - DATABASE_URL=postgresql://postgres:new_password@postgres:5432/postgres
      - SECRET_KEY=your-secret-key-here-change-in-production
      - ACCESS_TOKEN_EXPIRE_MINUTES=300
    ports:
      - "8000:8000"
    depends_on:
      postgres:
        condition: service_healthy
    volumes:
      - ./backend:/app
    restart: unless-stopped
    networks:
      - coal_blend_network
    healthcheck:
      test: ["CMD", "curl", "-f", "http://localhost:8000/verify-token"]
      interval: 30s
      timeout: 10s
      retries: 3
      start_period: 40s

  # Frontend 
  frontend:
    build:
      context: ./frontend
      dockerfile: Dockerfile
    container_name: coal_blend_frontend
    ports:
      - "3000:80"
    depends_on:
      - backend
    restart: unless-stopped
    networks:
      - coal_blend_network
    healthcheck:
      test: ["CMD", "wget", "--no-verbose", "--tries=1", "--spider", "http://localhost:80/"]
      interval: 30s
      timeout: 10s
      retries: 3
      start_period: 40s

volumes:
  postgres_data:

networks:
  coal_blend_network:
    driver: bridge
